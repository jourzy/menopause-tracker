{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\Documents\\\\Projects\\\\pause_copy\\\\group-5-spring-24\\\\pause\\\\frontend\\\\src\\\\components\\\\LogSymptoms.js\",\n  _s = $RefreshSig$();\nimport Modal from \"react-modal\";\nimport { useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDate, selectSubmittedDate, emptySymptoms, addSymptom } from '../redux/userSlice';\nimport SymptomsList from './SymptomsList';\nimport '../styles/LogSymptoms.css';\n// tried combining GetSymptoms and SymptomsList into one but didn't work\n// Keeping for future iterations to imporve codebase\n// import SymptomsChecklist from './SymptomsChecklist';\n\n// Modal component that allows users to log their symptoms for the given date\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogSymptoms({\n  show,\n  closeLogSymptoms\n}) {\n  _s();\n  const user = useSelector(state => state.user.userId);\n  const selectedDate = useSelector(selectDate);\n  const dateToSubmit = useSelector(selectSubmittedDate);\n  const dispatch = useDispatch();\n\n  // Added to remove console.log error: Warning: react-modal: App element is not defined. \n  useEffect(() => {\n    Modal.setAppElement('#root'); // Code here will run just like componentDidMount\n  }, []);\n\n  // When user submits the data, it adds the user symptoms to the db\n  // Also updates the userSymptoms in redux store\n  const handleSubmit = event => {\n    event.preventDefault();\n    // getting array of symptom ids to post to db\n    const checkedSymptomsById = Array.from(event.currentTarget.elements).filter(el => el.checked && el.getAttribute('type') === 'checkbox').map(el => el.id);\n    const queryData = {\n      user: user,\n      date: dateToSubmit,\n      symptoms: checkedSymptomsById\n    };\n    console.log(queryData);\n    // getting array of symptoms descriptions to add to redux store\n    const formData = new FormData(event.currentTarget);\n    const checkedValues = [];\n    for (let [name, value] of formData.entries()) {\n      checkedValues.push(name);\n    }\n    axios.post(\"http://localhost:8081/user/diary/add\", queryData).then(res => {\n      console.log(res);\n      // console.log(res.data);\n    }).catch(err => console.log(err));\n    dispatch(emptySymptoms());\n    checkedValues.forEach(symptom => {\n      dispatch(addSymptom(symptom));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: show,\n    onRequestClose: closeLogSymptoms,\n    className: \"log-symptoms-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-symptoms\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log-symptoms-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Log your symptoms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedDate.toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(SymptomsList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-symptoms-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: closeLogSymptoms,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(LogSymptoms, \"+IyCYiKbgsP4J1Gfw60G1gugXYE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = LogSymptoms;\nexport default LogSymptoms;\nvar _c;\n$RefreshReg$(_c, \"LogSymptoms\");","map":{"version":3,"names":["Modal","useEffect","Form","axios","useSelector","useDispatch","selectDate","selectSubmittedDate","emptySymptoms","addSymptom","SymptomsList","jsxDEV","_jsxDEV","LogSymptoms","show","closeLogSymptoms","_s","user","state","userId","selectedDate","dateToSubmit","dispatch","setAppElement","handleSubmit","event","preventDefault","checkedSymptomsById","Array","from","currentTarget","elements","filter","el","checked","getAttribute","map","id","queryData","date","symptoms","console","log","formData","FormData","checkedValues","name","value","entries","push","post","then","res","catch","err","forEach","symptom","isOpen","onRequestClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toDateString","onSubmit","method","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/emman/Documents/Projects/pause_copy/group-5-spring-24/pause/frontend/src/components/LogSymptoms.js"],"sourcesContent":["import Modal from \"react-modal\";\r\nimport { useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectDate, selectSubmittedDate, emptySymptoms, addSymptom } from '../redux/userSlice';\r\nimport SymptomsList from './SymptomsList';\r\nimport '../styles/LogSymptoms.css';\r\n// tried combining GetSymptoms and SymptomsList into one but didn't work\r\n// Keeping for future iterations to imporve codebase\r\n// import SymptomsChecklist from './SymptomsChecklist';\r\n\r\n\r\n// Modal component that allows users to log their symptoms for the given date\r\nfunction LogSymptoms ({show, closeLogSymptoms}) {\r\n\r\n    const user = useSelector((state) => state.user.userId);\r\n    const selectedDate = useSelector(selectDate);\r\n    const dateToSubmit = useSelector(selectSubmittedDate);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    // Added to remove console.log error: Warning: react-modal: App element is not defined. \r\n    useEffect(() => {\r\n        Modal.setAppElement('#root');// Code here will run just like componentDidMount\r\n      }, [])\r\n\r\n\r\n    // When user submits the data, it adds the user symptoms to the db\r\n    // Also updates the userSymptoms in redux store\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // getting array of symptom ids to post to db\r\n        const checkedSymptomsById = Array.from(event.currentTarget.elements)\r\n        .filter(el => (el.checked && \r\n            el.getAttribute('type') === 'checkbox'))\r\n            .map(el => el.id);\r\n        const queryData = {user: user, date: dateToSubmit, symptoms: checkedSymptomsById};\r\n        console.log(queryData);\r\n        // getting array of symptoms descriptions to add to redux store\r\n        const formData = new FormData(event.currentTarget);\r\n        const checkedValues = [];\r\n        for (let [name, value] of formData.entries()) {\r\n            checkedValues.push(name);\r\n          }\r\n        axios.post(\"http://localhost:8081/user/diary/add\", queryData)\r\n        .then(res => {\r\n            console.log(res);\r\n            // console.log(res.data);\r\n        }).catch(err => console.log(err));\r\n        dispatch(emptySymptoms());\r\n        checkedValues.forEach((symptom) => {\r\n            dispatch(addSymptom(symptom))\r\n          })\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={show} \r\n        onRequestClose={closeLogSymptoms}\r\n        className=\"log-symptoms-modal\">\r\n            <div className=\"log-symptoms\" >\r\n                <div className=\"log-symptoms-header\">\r\n                    <h1>Log your symptoms</h1>\r\n                    <p>{selectedDate.toDateString()}</p>\r\n            </div>\r\n            \r\n                <Form onSubmit={handleSubmit} method=\"POST\">\r\n                \r\n                    <SymptomsList />\r\n                    {/* <SymptomsChecklist /> */}\r\n                    <br/>\r\n                    \r\n            \r\n            <div className=\"log-symptoms-footer\">\r\n                <button type=\"submit\">Save</button>\r\n                <button className=\"delete-button\" onClick={closeLogSymptoms}>Close</button>\r\n            </div>\r\n                </Form>\r\n\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default LogSymptoms;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,UAAU,QAAQ,oBAAoB;AAC/F,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,2BAA2B;AAClC;AACA;AACA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAAE;EAACC,IAAI;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAE5C,MAAMC,IAAI,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC;EACtD,MAAMC,YAAY,GAAGhB,WAAW,CAACE,UAAU,CAAC;EAC5C,MAAMe,YAAY,GAAGjB,WAAW,CAACG,mBAAmB,CAAC;EACrD,MAAMe,QAAQ,GAAGjB,WAAW,CAAC,CAAC;;EAG9B;EACAJ,SAAS,CAAC,MAAM;IACZD,KAAK,CAACuB,aAAa,CAAC,OAAO,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;;EAGR;EACA;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA,MAAMC,mBAAmB,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,aAAa,CAACC,QAAQ,CAAC,CACnEC,MAAM,CAACC,EAAE,IAAKA,EAAE,CAACC,OAAO,IACrBD,EAAE,CAACE,YAAY,CAAC,MAAM,CAAC,KAAK,UAAW,CAAC,CACvCC,GAAG,CAACH,EAAE,IAAIA,EAAE,CAACI,EAAE,CAAC;IACrB,MAAMC,SAAS,GAAG;MAACrB,IAAI,EAAEA,IAAI;MAAEsB,IAAI,EAAElB,YAAY;MAAEmB,QAAQ,EAAEb;IAAmB,CAAC;IACjFc,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;IACtB;IACA,MAAMK,QAAQ,GAAG,IAAIC,QAAQ,CAACnB,KAAK,CAACK,aAAa,CAAC;IAClD,MAAMe,aAAa,GAAG,EAAE;IACxB,KAAK,IAAI,CAACC,IAAI,EAAEC,KAAK,CAAC,IAAIJ,QAAQ,CAACK,OAAO,CAAC,CAAC,EAAE;MAC1CH,aAAa,CAACI,IAAI,CAACH,IAAI,CAAC;IAC1B;IACF3C,KAAK,CAAC+C,IAAI,CAAC,sCAAsC,EAAEZ,SAAS,CAAC,CAC5Da,IAAI,CAACC,GAAG,IAAI;MACTX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC,CAAC;IACjChC,QAAQ,CAACd,aAAa,CAAC,CAAC,CAAC;IACzBqC,aAAa,CAACU,OAAO,CAAEC,OAAO,IAAK;MAC/BlC,QAAQ,CAACb,UAAU,CAAC+C,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC;EACR,CAAC;EAED,oBACI5C,OAAA,CAACZ,KAAK;IAACyD,MAAM,EAAE3C,IAAK;IACpB4C,cAAc,EAAE3C,gBAAiB;IACjC4C,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAC1BhD,OAAA;MAAK+C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBhD,OAAA;QAAK+C,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAChChD,OAAA;UAAAgD,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BpD,OAAA;UAAAgD,QAAA,EAAIxC,YAAY,CAAC6C,YAAY,CAAC;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAEFpD,OAAA,CAACV,IAAI;QAACgE,QAAQ,EAAE1C,YAAa;QAAC2C,MAAM,EAAC,MAAM;QAAAP,QAAA,gBAEvChD,OAAA,CAACF,YAAY;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEhBpD,OAAA;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGbpD,OAAA;UAAK+C,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAChChD,OAAA;YAAQwD,IAAI,EAAC,QAAQ;YAAAR,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnCpD,OAAA;YAAQ+C,SAAS,EAAC,eAAe;YAACU,OAAO,EAAEtD,gBAAiB;YAAA6C,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB;AAAChD,EAAA,CApEQH,WAAW;EAAA,QAEHT,WAAW,EACHA,WAAW,EACXA,WAAW,EACfC,WAAW;AAAA;AAAAiE,EAAA,GALvBzD,WAAW;AAsEpB,eAAeA,WAAW;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}